@page "/employees"
@using EmpMan.Models
@using Microsoft.AspNetCore.Components
@using System.Net.Http
@using System.Net.Http.Json
@inject IHttpClientFactory HttpClientFactory

<PageTitle>Employee List</PageTitle>

<h1>Employees</h1>

<p>
    <a href="employees/create" class="btn btn-primary">Create New</a>
</p>

@if (isLoading)
{
    <p><em>Loading employees...</em></p> 
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
                <tr>
                    <td>@employee.FName</td>
                    <td>@employee.LName</td>
                    <td>@employee.Email</td>
                    <td>
                        <a href="@($"employees/edit/{employee.Id}")" class="btn btn-info">Edit</a> |
                        <a href="@($"employees/details/{employee.Id}")" class="btn btn-success">Details</a> |
                        <a href="@($"employees/delete/{employee.Id}")" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Employee> employees = new List<Employee>();
    private bool isLoading = true; // Loading flag

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var client = HttpClientFactory.CreateClient("EmpManApiClient");
            employees = await client.GetFromJsonAsync<List<Employee>>("api/Employees"); // Ensure this matches the API URL
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An unexpected error occurred: {ex.Message}");
        }
        finally
        {
            isLoading = false; // Loading complete
        }
    }
}
